// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NftMkpAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NftMkpAPI.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230205224925_initial1")]
    partial class initial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NftMkpAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is_Sold")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sold");

                    b.Property<int>("Item_Id")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<double>("Listing_Price")
                        .HasColumnType("double precision")
                        .HasColumnName("listing_price");

                    b.Property<int>("Nft_Id")
                        .HasColumnType("integer")
                        .HasColumnName("nft_id");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("seller");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double precision")
                        .HasColumnName("total_price");

                    b.HasKey("Id");

                    b.HasIndex("Nft_Id")
                        .IsUnique();

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("NftMkpAPI.Models.Nft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Nft_Id")
                        .HasColumnType("integer")
                        .HasColumnName("nft_id");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("owner");

                    b.HasKey("Id");

                    b.ToTable("nfts", (string)null);
                });

            modelBuilder.Entity("NftMkpAPI.Models.Item", b =>
                {
                    b.HasOne("NftMkpAPI.Models.Nft", "Nft")
                        .WithOne("Item")
                        .HasForeignKey("NftMkpAPI.Models.Item", "Nft_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nft");
                });

            modelBuilder.Entity("NftMkpAPI.Models.Nft", b =>
                {
                    b.Navigation("Item")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
